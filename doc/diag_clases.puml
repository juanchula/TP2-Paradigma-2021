Diagrama de clases del TP2 - CryptoServer

@startuml CryptoServer

'hide circle
skinparam ClassAttributeIconSize 0

class ClienteHTTP {
    - {static} TaskScheduler scheduler 
    - ZnClient cliente_http_btc
    - ZnClient cliente_http_eth 
    - Integer periodo
    - OrderedCollection valoresBTC
    - OrderedCollection valoresETH
    - GestorDeEventos eventManager

    + initialize()
    + doGetRequest(ZnClient aClientHTTP) : Dictionary
    + comenzarScheduler()
    + detenerScheduler()
    + setFunctionScheduler()
    + {static} scheduler() : TaskScheduler
    + {static} scheduler(TaskScheduler obj) 
    '+ cliente_http_btc() : ZnClient
    '+ cliente_http_btc(ZnClient obj)
    '+ cliente_http_eth() : ZnClient 
    '+ cliente_http_eth(ZnClient obj)
    '+ eventManager() : GestorDeEventos 
    '+ eventManager(GestorDeEventos obj)
    '+ periodo() : Integer
    '+ periodo(Integer obj)
    '+ valoresBTC() : OrderedCollection
    '+ valoresBTC(OrderedCollection obj)
    '+ valoresETH() : OrderedCollection
    '+ valoresETH(OrderedCollection obj)

}

class Application {
    - ServidorHTTP server 
    - ClienteHTPP cliete_http 

    + initialize()
    + main()
    '+ server() : ServidorHTTP
    '+ server(ServidorHTTP anObject)
}

class GestorDeEventos {
    - OrderedCollection listeners 

    + initialize()
    '+ listeners() : OrderedCollection
    '+ listeners(OrderedCollection anObject)
    + notify(Dictionary aData)
    + subscribe(Object aListener)
    + unsubscribe(Object aListener)
}

interface Indicador {

    + calcularMetrica(Dictionary valoresMercado) : String
}

class IndicadorRSI {

    + calcularMetrica(Dictionary valoresMercado) : String
}

class IndicadorMomentum {

    + calcularMetrica(Dictionary valoresMercado) : String
}

class ServidorHTTP {
    - Array ipAddr 
    - Integer nroPuerto 
    - WebSocketServer webSocket 
    - String html

    + initialize()
    + startServidor()
    + stopServidor()
    '+ ipAddr() : Array
    '+ ipAddr(Array obj)
    '+ nroPuerto() : Integer 
    '+ nroPuerto(Integer obj) 
    '+ webSocket() : WebSocketServer 
    '+ webSocket(WebSocketServer obj)
    '+ html() : String
    '+ html(String obj)
}

class WebSocketServer {
    - data
    - indicadorCVBTC
    - indicadorCVETH
    - datasimple

    + initialize()
    '+ data() : JSON data
    '+ data(JSON anObject)
    '+ datasimple() : Dictionary
    '+ datasimple(Dictionary anObject)
    + indicadorCVBTC() : Indicador
    + indicadorCVETH() : Indicador
    + selectMomentumBTC()
    + selectMomentumETH()
    + selectRSIBTC()
    + selectRSIETH()
    + update(Dictionary aData)
    + value(ZnWebSocket webSocket) 
}

WebSocketServer o.> Indicador
Indicador <|.. IndicadorRSI
Indicador <|.. IndicadorMomentum

Application ..> ClienteHTTP
Application ..> ServidorHTTP
ServidorHTTP ..> WebSocketServer
ClienteHTTP o.> GestorDeEventos
GestorDeEventos o--> WebSocketServer

@enduml